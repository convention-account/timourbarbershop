<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>[ACCESS] Admin Panel - TimourBarber</title>
    <link rel="icon" type="image/x-icon" href="../media/logo.ico">
    <link rel="stylesheet" type="text/css" href="/css/admin.css">
    <link rel="stylesheet" href="/css/mobile-adaptation.css">
    <meta name="viewport"
        content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover">
    <style>
        /* Styles for the main container */
        main {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .contact-section.checkout-section {
            padding: 0;
        }

        .contact-wrapper.checkout-wrapper {
            width: 100%;
        }

        .headline {
            color: #9F7FF3;
            font-size: 48px;
            font-weight: 900;
            text-transform: uppercase;
            text-align: center;
            margin: 40px 0;
            text-shadow: 0 5px 20px rgba(159, 127, 243, 0.8);
        }

        .form-title {
            color: #9F7FF3;
            font-size: 32px;
            font-weight: 900;
            text-transform: uppercase;
            text-align: center;
            margin-bottom: 40px;
            text-shadow: 0 2px 10px rgba(159, 127, 243, 0.5);
        }

        /* Container for order cards */
        .orders-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            width: 100%;
        }

        /* Styles for order card */
        .order-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid rgba(159, 127, 243, 0.3);
        }

        .order-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        }

        .order-card h3 {
            color: #FFF;
            font-size: 22px;
            font-weight: 900;
            margin: 0 0 15px;
            text-transform: uppercase;
            border-bottom: 2px solid #9F7FF3;
            padding-bottom: 5px;
        }

        .order-card p {
            color: #FFF;
            font-size: 16px;
            margin: 8px 0;
            line-height: 1.5;
        }

        .order-card .items {
            margin: 10px 0;
            padding: 10px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 10px;
        }

        .order-card .item {
            color: #CCC;
            font-size: 14px;
            margin: 5px 0;
        }

        .order-card .status {
            font-weight: 900;
            text-transform: uppercase;
            padding: 5px 10px;
            border-radius: 5px;
            display: inline-block;
        }

        .order-card .status.placed {
            background: rgba(128, 128, 128, 0.2);
            color: #808080;
        }

        .order-card .status.preparing {
            background: rgba(255, 165, 0, 0.2);
            color: #FFA500;
        }

        .order-card .status.ready-to-ship {
            background: rgba(255, 215, 0, 0.2);
            color: #FFD700;
        }

        .order-card .status.delivered {
            background: rgba(0, 206, 209, 0.2);
            color: #00CED1;
        }

        .order-card .status.cancelled {
            background: rgba(255, 68, 68, 0.2);
            color: #FF4444;
        }

        .order-card .status.awaiting_payment {
            background: rgba(128, 128, 128, 0.2);
            color: #808080;
        }

        .order-card .status.awaiting_visitor {
            background: rgba(255, 165, 0, 0.2);
            color: #FFA500;
        }

        .order-card .status.completed {
            background: rgba(0, 206, 209, 0.2);
            color: #00CED1;
        }

        /* Styles for select and button */
        .status-controls {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
        }

        .status-select {
            padding: 5px;
            border-radius: 5px;
            background: #FFF;
            color: #000;
            font-size: 14px;
            border: none;
            cursor: pointer;
        }

        .update-status-btn,
        .delete-order-btn {
            padding: 5px 10px;
            background: #9F7FF3;
            color: #FFF;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 900;
            text-transform: uppercase;
            transition: opacity 0.3s ease;
        }

        .delete-order-btn {
            background: #FF4444;
        }

        .update-status-btn:hover,
        .delete-order-btn:hover {
            opacity: 0.8;
        }

        /* Product Management Styles */
        .admin-controls {
            margin: 20px 0;
        }

        #manage-products-btn {
            padding: 10px 20px;
            background: #9F7FF3;
            color: #FFF;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 900;
            text-transform: uppercase;
            transition: opacity 0.3s ease;
        }

        #manage-products-btn:hover {
            opacity: 0.8;
        }

        .products-management.hidden {
            display: none;
        }

        .products-management {
            width: 100%;
            max-width: 1200px;
            margin: 20px 0;
        }

        .products-management h2 {
            color: #9F7FF3;
            font-size: 32px;
            font-weight: 900;
            text-transform: uppercase;
            text-align: center;
            margin-bottom: 20px;
            text-shadow: 0 2px 10px rgba(159, 127, 243, 0.5);
        }

        .products-list {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
        }

        .product-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(159, 127, 243, 0.3);
            width: 300px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        }

        .new-product {
            background: rgba(240, 240, 240, 0.2);
            text-align: center;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100px;
        }

        .new-product .plus {
            font-size: 36px;
            color: #9F7FF3;
            margin-right: 10px;
        }

        .new-product p {
            color: #FFF;
            font-size: 18px;
            font-weight: 900;
            text-transform: uppercase;
        }

        .product-form {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .product-form input,
        .product-form textarea {
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #9F7FF3;
            background: rgba(255, 255, 255, 0.9);
            color: #000;
            font-size: 14px;
        }

        .product-form textarea {
            min-height: 80px;
            resize: vertical;
        }

        .product-form .current-images img {
            max-width: 50px;
            margin: 5px;
            border-radius: 5px;
        }

        .save-btn,
        .delete-btn {
            padding: 8px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 900;
            text-transform: uppercase;
            transition: opacity 0.3s ease;
        }

        .save-btn {
            background: #9F7FF3;
            color: #FFF;
        }

        .delete-btn {
            background: #FF4444;
            color: #FFF;
            margin-top: 10px;
        }

        .save-btn:hover,
        .delete-btn:hover {
            opacity: 0.8;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(159, 127, 243, 0.3);
            width: 90%;
            max-width: 400px;
            text-align: center;
        }

        .modal-content h2 {
            color: #9F7FF3;
            font-size: 24px;
            font-weight: 900;
            text-transform: uppercase;
            margin-bottom: 20px;
        }

        .modal-content p {
            color: #FFF;
            font-size: 16px;
            margin-bottom: 20px;
        }

        .modal-input {
            width: 100%;
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #9F7FF3;
            background: rgba(255, 255, 255, 0.9);
            color: #000;
            font-size: 14px;
            margin-bottom: 20px;
        }

        .modal-actions {
            display: flex;
            gap: 10px;
            justify-content: center;
        }

        .modal-btn {
            padding: 8px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 900;
            text-transform: uppercase;
            transition: opacity 0.3s ease;
        }

        .confirm-delete-btn {
            background: #FF4444;
            color: #FFF;
        }

        .close-modal-btn {
            background: #9F7FF3;
            color: #FFF;
        }

        .modal-btn:hover {
            opacity: 0.8;
        }

        /* Responsiveness */
        @media (max-width: 768px) {
            main {
                padding: 15px;
            }

            .headline {
                font-size: 36px;
                margin: 30px 0;
            }

            .form-title {
                font-size: 24px;
                margin-bottom: 30px;
            }

            .orders-container,
            .products-list {
                grid-template-columns: 1fr;
                gap: 15px;
            }

            .order-card,
            .product-card {
                padding: 15px;
                width: 100%;
                max-width: 100%;
            }

            .order-card h3 {
                font-size: 18px;
                margin-bottom: 10px;
            }

            .order-card p,
            .modal-content p {
                font-size: 14px;
                margin: 6px 0;
            }

            .order-card .item {
                font-size: 12px;
            }

            .order-card .status {
                font-size: 12px;
                padding: 4px 8px;
            }

            .status-select,
            .product-form input,
            .product-form textarea,
            .modal-input {
                font-size: 12px;
            }

            .update-status-btn,
            .delete-order-btn,
            .save-btn,
            .delete-btn,
            .modal-btn {
                font-size: 12px;
                padding: 4px 8px;
            }

            .new-product {
                height: 80px;
            }

            .new-product .plus {
                font-size: 28px;
            }

            .new-product p {
                font-size: 16px;
            }
        }

        @media (max-width: 480px) {
            .headline {
                font-size: 28px;
                margin: 20px 0;
            }

            .form-title {
                font-size: 20px;
                margin-bottom: 20px;
            }

            .order-card,
            .product-card {
                padding: 10px;
            }

            .order-card h3 {
                font-size: 16px;
            }

            .order-card p,
            .modal-content p {
                font-size: 12px;
            }

            .order-card .item {
                font-size: 11px;
            }

            .order-card .status {
                font-size: 11px;
                padding: 3px 6px;
            }

            .status-select,
            .product-form input,
            .product-form textarea,
            .modal-input {
                font-size: 11px;
            }

            .update-status-btn,
            .delete-order-btn,
            .save-btn,
            .delete-btn,
            .modal-btn {
                font-size: 11px;
                padding: 3px 6px;
            }
        }
    </style>
</head>

<body>
    <div class="background-overlay"></div>
    <header>
        <div class="logo">
            <a href="/">
                <img src="../media/icon.png" alt="Logo" class="logo-icon">
            </a>
        </div>
        <nav class="navbar">
            <div class="burger-menu">
                <span></span>
                <span></span>
                <span></span>
            </div>
            <ul class="nav-list">
                <li><a href="/">Home</a></li>
                <li><a href="/academy">Academy</a></li>
                <li><a href="/webshop">Store</a></li>
                <li><a href="/about">About</a></li>
                <li><a href="/services">Services</a></li>
                <li><a href="/contact">Contact</a></li>
                <li><a href="/job">Job</a></li>
                <li><a href="/coin">Coin</a></li>
            </ul>
        </nav>
        <div class="login-nav">
            <li>Welcome, <%= user %> | <a href="/logout">Logout</a></li>
        </div>
    </header>

    <main class="contact-section checkout-section">
        <div class="contact-wrapper checkout-wrapper">
            <h1 class="headline">Admin Panel</h1>
            <div class="contact-form checkout-form">
                <h2 class="form-title">All Orders</h2>
                <% if (orders.length===0) { %>
                    <p>No orders.</p>
                    <% } else { %>
                        <div class="orders-container">
                            <% orders.forEach(order=> { %>
                                <div class="order-card">
                                    <h3>Order #<%= order.order_number %> (User: <%= order.username %>)</h3>
                                    <p><strong>Items:</strong></p>
                                    <div class="items">
                                        <% order.items.forEach(item=> { %>
                                            <p class="item">
                                                <%= item.title %> - <%= item.price %> USDT
                                            </p>
                                            <% }); %>
                                    </div>
                                    <p><strong>Total:</strong>
                                        <%= order.total_usdt.toFixed(2) %> USDT
                                    </p>
                                    <p><strong>Shipping Address:</strong>
                                        <%= order.shipping_address %>
                                    </p>
                                    <p><strong>Status:</strong> <span
                                            class="status <%= order.status.replace(/\s+/g, '-') %>">
                                            <%= order.status %>
                                        </span></p>
                                    <div class="status-controls">
                                        <select class="status-select" data-order-number="<%= order.order_number %>">
                                            <% if (order.order_number.startsWith('VCH-')) { %>
                                                <option value="awaiting_payment" <%=order.status==='awaiting_payment'
                                                    ? 'selected' : '' %>>Awaiting Payment</option>
                                                <option value="awaiting_visitor" <%=order.status==='awaiting_visitor'
                                                    ? 'selected' : '' %>>Awaiting Visitor</option>
                                                <option value="completed" <%=order.status==='completed' ? 'selected'
                                                    : '' %>>Completed</option>
                                                <% } else { %>
                                                    <option value="placed" <%=order.status==='placed' ? 'selected' : ''
                                                        %>>Placed</option>
                                                    <option value="preparing" <%=order.status==='preparing' ? 'selected'
                                                        : '' %>>Preparing</option>
                                                    <option value="ready to ship" <%=order.status==='ready to ship'
                                                        ? 'selected' : '' %>>Ready to Ship</option>
                                                    <option value="delivered" <%=order.status==='delivered' ? 'selected'
                                                        : '' %>>Delivered</option>
                                                    <option value="cancelled" <%=order.status==='cancelled' ? 'selected'
                                                        : '' %>>Cancelled</option>
                                                    <% } %>
                                        </select>
                                        <button class="update-status-btn"
                                            onclick="updateStatus('<%= order.order_number %>')">Update</button>
                                        <button class="delete-order-btn"
                                            onclick="openDeleteModal('<%= order.order_number %>')">Delete</button>
                                    </div>
                                </div>
                                <% }); %>
                        </div>
                        <% } %>
            </div>

            <!-- Product Management Section -->
            <div class="admin-controls">
                <button id="manage-products-btn">Manage Products</button>
            </div>
            <div id="products-management" class="products-management hidden">
                <h2>Product Management</h2>
                <div id="products-list" class="products-list">
                    <!-- Products will be populated dynamically via JS -->
                </div>
                <div class="product-card new-product">
                    <div class="add-new-product">
                        <span class="plus">+</span>
                        <p>Add New Product</p>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Modal for Order Deletion -->
    <div id="delete-modal" class="modal">
        <div class="modal-content">
            <h2>Confirm Order Deletion</h2>
            <p>Please enter your password to delete order #<span id="delete-order-number"></span></p>
            <input type="password" id="delete-password" placeholder="Your Password" class="modal-input">
            <div class="modal-actions">
                <button class="modal-btn confirm-delete-btn" onclick="confirmDelete()">Confirm</button>
                <button class="modal-btn close-modal-btn" onclick="closeDeleteModal()">Cancel</button>
            </div>
        </div>
    </div>

    <footer>
        <div class="footer-content">
            <p>© 2025 Timour Barber. All rights reserved.</p>
            <ul class="footer-links">
                <li><a href="/cookie-policy">Privacy Policy</a></li>
                <li><a href="/terms-of-service">Terms of Service</a></li>
                <li><a href="/contact">Contact Us</a></li>
            </ul>
        </div>
    </footer>

    <script src="/js/script.js"></script>
    <script src="/js/admin.js"></script>
    <script>
        // Existing order management scripts
        function updateStatus(orderNumber) {
            const select = document.querySelector(`.status-select[data-order-number="${orderNumber}"]`);
            const newStatus = select.value;

            fetch('/admin/update-status', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ orderNumber, status: newStatus })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Failed to update status: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating status');
                });
        }

        let orderToDelete = null;

        function openDeleteModal(orderNumber) {
            orderToDelete = orderNumber;
            document.getElementById('delete-order-number').textContent = orderNumber;
            document.getElementById('delete-modal').style.display = 'flex';
        }

        function closeDeleteModal() {
            document.getElementById('delete-modal').style.display = 'none';
            document.getElementById('delete-password').value = '';
            orderToDelete = null;
        }

        function confirmDelete() {
            const password = document.getElementById('delete-password').value;
            if (!password) {
                alert('Please enter your password');
                return;
            }

            fetch('/admin/delete-order', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ orderNumber: orderToDelete, password })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Order deleted successfully');
                        location.reload();
                    } else {
                        alert('Failed to delete order: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting order');
                })
                .finally(() => closeDeleteModal());
        }

        // Product management scripts
        document.addEventListener('DOMContentLoaded', () => {
            const manageProductsBtn = document.getElementById('manage-products-btn');
            const productsManagement = document.getElementById('products-management');
            const productsList = document.getElementById('products-list');
            const newProductCard = document.querySelector('.new-product');

            manageProductsBtn.addEventListener('click', () => {
                productsManagement.classList.toggle('hidden');
                if (!productsManagement.classList.contains('hidden')) {
                    loadProducts();
                }
            });

            async function loadProducts() {
                try {
                    const response = await fetch('/admin/products');
                    const products = await response.json();
                    productsList.innerHTML = '';
                    products.forEach(product => {
                        const productCard = createProductCard(product);
                        productsList.appendChild(productCard);
                    });
                } catch (error) {
                    console.error('Error loading products:', error);
                }
            }

            function createProductCard(product) {
                const card = document.createElement('div');
                card.className = 'product-card';
                card.innerHTML = `
                    <form class="product-form" data-id="${product.id}">
                        <input type="text" name="title" value="${product.title}" placeholder="Title">
                        <textarea name="description" placeholder="Description">${product.description}</textarea>
                        <input type="number" name="price" value="${product.price}" placeholder="Price (USDT)">
                        <input type="number" name="priceEUR" value="${product.priceEUR}" placeholder="Price (EUR)">
                        <input type="file" name="images" multiple accept="image/*">
                        <div class="current-images">
                            ${product.images.map(img => `<img src="${img}" alt="${product.title}">`).join('')}
                        </div>
                        <button type="button" class="save-btn">Save Changes</button>
                        <button type="button" class="delete-btn">Delete Product</button>
                    </form>
                `;

                card.querySelector('.save-btn').addEventListener('click', () => saveProduct(card));
                card.querySelector('.delete-btn').addEventListener('click', () => deleteProduct(product.id));
                return card;
            }

            newProductCard.addEventListener('click', () => {
                const form = document.createElement('div');
                form.className = 'product-card';
                form.innerHTML = `
                    <form class="product-form">
                        <input type="text" name="title" placeholder="Title">
                        <textarea name="description" placeholder="Description"></textarea>
                        <input type="number" name="price" placeholder="Price (USDT)">
                        <input type="number" name="priceEUR" placeholder="Price (EUR)">
                        <input type="file" name="images" multiple accept="image/*">
                        <button type="button" class="save-btn">Add Product</button>
                    </form>
                `;
                form.querySelector('.save-btn').addEventListener('click', () => saveProduct(form, true));
                productsList.appendChild(form);
                newProductCard.style.display = 'none';
            });

            async function saveProduct(card, isNew = false) {
                const form = card.querySelector('.product-form');
                const formData = new FormData(form);
                if (!isNew) formData.append('productId', form.dataset.id);

                try {
                    const response = await fetch(isNew ? '/admin/add-product' : '/admin/update-product', {
                        method: 'POST',
                        body: formData
                    });
                    const result = await response.json();
                    if (result.success) {
                        alert('Product saved successfully');
                        loadProducts();
                        if (isNew) newProductCard.style.display = 'flex';
                    } else {
                        alert('Failed to save product: ' + result.error);
                    }
                } catch (error) {
                    console.error('Error saving product:', error);
                    alert('Error saving product');
                }
            }

            async function deleteProduct(productId) {
                const password = prompt('Enter admin password to confirm deletion:');
                if (!password) return;

                try {
                    const response = await fetch('/admin/delete-product', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId, password })
                    });
                    const result = await response.json();
                    if (result.success) {
                        alert('Product deleted successfully');
                        loadProducts();
                    } else {
                        alert('Failed to delete product: ' + result.error);
                    }
                } catch (error) {
                    console.error('Error deleting product:', error);
                    alert('Error deleting product');
                }
            }
        });
    </script>

    <div class="loading-overlay">
        <div class="spinner"></div>
    </div>
</body>

</html>